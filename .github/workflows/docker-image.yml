name: Release Readest Docker Image

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  get-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.get-release.outputs.release_id }}
      release_tag: ${{ steps.get-release.outputs.release_tag }}
      release_note: ${{ steps.get-release-notes.outputs.release_note }}
      release_version: ${{ steps.get-release-notes.outputs.release_version }}

    steps:
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./apps/readest-app/package.json').version")" >> $GITHUB_ENV
      - name: get release
        id: get-release
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            core.setOutput('release_id', data.id);
            core.setOutput('release_tag', data.tag_name);
      - name: get release notes
        id: get-release-notes
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const version = require('./apps/readest-app/package.json').version;
            const releaseNotesFileContent = fs.readFileSync('./apps/readest-app/release-notes.json', 'utf8');
            const releaseNotes = JSON.parse(releaseNotesFileContent).releases[version] || {};
            const notes = releaseNotes.notes || [];
            const releaseNote = notes.map((note, index) => `${index + 1}. ${note}`).join(' ');
            console.log('Formatted release note:', releaseNote);
            core.setOutput('release_version', version);
            core.setOutput('release_note', releaseNote);

  build-docker:
    needs: get-release
    runs-on: ${{ matrix.config.os }}
    steps:
      - name: checkout
      - uses: actions/checkout@v4

      - name: initialize git submodules
        run: git submodule update --init --recursive

      - name: setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.14.4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          file: ./Dockerfile
          tags: ${{ secrets.DOCKER_NAMESPACE }}/readest:${{ needs.get-release.outputs.release_version }},${{ secrets.DOCKER_NAMESPACE }}/readest:latest
